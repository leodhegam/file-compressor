discompact(filePath) {

    const fileContent = fs.readFileSync(filePath).toString();

    const [ hashMapString, compactedString ] = fileContent.split(process.platform === 'linux' ? '\n' : '\r\n');
    
    const codeMap = this._mountHashMap(hashMapString);
    const tree = this._getTreeByEncodedText(codeMap);
    
    // let currentNode = this.tree[0];
    let currentNode = tree;
    let rawString = '';
    
    let i = 0;

    while(i <= compactedString.length){
      if (currentNode.letter) {
        rawString += currentNode.letter;
        currentNode = tree;
      }
      if(compactedString[i++] == '0') {
        currentNode = currentNode.left;
      } else {
        currentNode = currentNode.right;
      }
    }

    fs.writeFile('output', rawString, (err) => {});
    
  }